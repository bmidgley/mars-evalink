# Generated by Django 4.2.16 on 2025-10-06 00:19

from django.db import migrations, models
from django.utils import timezone
import pytz


def populate_updated_on(apps, schema_editor):
    """Populate the updated_on field for existing TextLog records."""
    TextLog = apps.get_model('evalink', 'TextLog')
    Campus = apps.get_model('evalink', 'Campus')
    
    # Get the campus timezone
    try:
        campus = Campus.objects.first()
        if campus and campus.time_zone:
            tz = pytz.timezone(campus.time_zone)
        else:
            tz = timezone.get_current_timezone()
    except:
        tz = timezone.get_current_timezone()
    
    # Update all TextLog records
    for text_log in TextLog.objects.all():
        if text_log.updated_at:
            # Convert to local timezone and extract date
            local_time = text_log.updated_at.astimezone(tz)
            text_log.updated_on = local_time.date()
            text_log.save()


def reverse_populate_updated_on(apps, schema_editor):
    """Reverse migration - set updated_on to None."""
    TextLog = apps.get_model('evalink', 'TextLog')
    TextLog.objects.all().update(updated_on=None)


class Migration(migrations.Migration):

    dependencies = [
        ('evalink', '0031_create_campus_planner_station'),
    ]

    operations = [
        migrations.AddField(
            model_name='textlog',
            name='updated_on',
            field=models.DateField(db_index=True, null=True),
        ),
        migrations.RunPython(
            populate_updated_on,
            reverse_populate_updated_on,
        ),
    ]